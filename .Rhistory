demo()
print("Hello world!")
setwd("~/")
2+1
3+2+1
[2+4,5+7]
7+9
2+1==3
install.packages("ggplot2")
library(ggplot2)
library(nycflights13)
library(dplyr)
library(knitr)
install.packages("knitr")
install.packages("knitr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("nycfllights13")
install.packages("BH")
install.packages(c("backports", "cli", "digest", "dplyr", "ellipsis", "evaluate", "fansi", "ggplot2", "glue", "highr", "htmltools", "jsonlite", "knitr", "markdown", "mime", "pillar", "pkgconfig", "plyr", "purrr", "R6", "Rcpp", "rlang", "rmarkdown", "scales", "stringi", "tidyselect", "tinytex", "vctrs", "xfun", "yaml"))
if(!file.exists("data")){dir.create("data")}
if(!file.exists("data")){dir.create("data")}
if(!file.exists("data")){dir.create("data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl,method="curl")
if(!file.exists("data")){dir.create("data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl,destfile = "./data.csv",method="curl")
ls()
library(csv)
data <- read.csv("./data.csv")
data
head(data)
data[data$VAL>24]
data[data$VAL]
data$VAL
DATA$VAL>=24
data$VAL>24
library(swirl)
swirl()
library(dplyr)
cran <-tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran,package)
by_package
summarise(mean(cran$size))
summarise?
summarise(cran,mean(size))
summarise(by_package,mean(size))
n?
submit()
tbl, pack_sum
pack_sum
quantile(pack_sum$count,probs=0.99)
top_counts<- filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts,desc(counts))
top_counts_sorted <- arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique,0.99)
pack_sum <- filter(pack_sum,unique>465)
top_unique <- filter(pack_sum,unique>465)
View(top_unique)
top_unique_sorted <- arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit
submit()
submit()
submit()
mydf<-read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(my_df)
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(5:20))
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran, r_version == "3.1.1",country=="US")
?Comparison
filter(cran, r_version <= "3.0.2",country=="IN")
filter(cran, country=="IN" | country == "US")
filter(cran, size>100500, r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
cran2 <- select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id)
)
arrange(cran2,package,ip_id)
arrange(country,desc(r_version),ip_id)
arrange(cran,country,desc(r_version),ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3 <- select(cran,ip_id,package,size)
cran3
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^10,size_gb = size/2^20)
mutate(cran3, size_mb = size/2^20,size_gb = size_mb/2^10)
correct_size <- mutate(cran,correct_size=size+1000)
correct_size <- mutate(cran3,correct_size=size+1000)
mutate(cran3,correct_size=size+1000)
summarize(cran, avg_bytes = mean(size))
install.packages(p, quiet = TRUE)
install.packages(tidyr)
install.packages("tidyr")
swirl()
library(swirl)
swirl()
swirl()
swirl()
library(tidyr)
students
?gather
gather(sex,count,-grade)
gather(students, sex,count,-grade)
students2
res<-gather(students2,key="sex_class",value = "count", sex,count,-grade)
res<-gather(students2,key="sex_class",value = "count")
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(res,col=sex_class,into=c("sex","class"))
submit()
student3
students3
submit()
submit()
spread?
spread?
spread()?
spread?
spread()
spread?
Spread?
spread()?
swirl()
spread?
d
spread()
spread()?
swirl()
spread_?
swirl()
spread(?)
spread?()
spread?
\
spread?
e
separate?
3
select?
spread?
spread?
separate?
separate?
select?
r
()
)
ds
document?
view?
View?
q
q()
library(data.table)
iris_dt <- as.data.table(iris)
iris_dt[Species == "virginica",round(mean(Sepal.Length))
library(dplyr)
# STEP 0 - Read data ####################
# download zip file containing data if it hasn't already been downloaded
zipUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
zipFile <- "UCI HAR Dataset.zip"
if (!file.exists(zipFile)) {
download.file(zipUrl, zipFile, mode = "wb")
}
# unzip zip file containing data if data directory doesn't already exist
dataPath <- "UCI HAR Dataset"
if (!file.exists(dataPath)) {
unzip(zipFile)
}
# read training data
trainingSubjects <- read.table(file.path(dataPath, "train/subject_train.txt"))
trainingValues <- read.table(file.path(dataPath, "train/X_train.txt"))
trainingActivity <- read.table(file.path(dataPath, "train/y_train.txt"))
View(trainingValues)
# read test data
testSubjects <- read.table(file.path(dataPath, "test/subject_test.txt"))
testValues <- read.table(file.path(dataPath, "test/X_test.txt"))
testActivity <- read.table(file.path(dataPath, "test/y_test.txt"))
# read features
features <- read.table(file.path(dataPath, "features.txt"), as.is = TRUE)
# read activity labels
activities <- read.table(file.path(dataPath, "activity_labels.txt"))
View(activities)
colnames(activities) <- c("activityId", "activityLabel")
View(activities)
View(activities)
humanActivity <- rbind(
cbind(trainingSubjects, trainingValues, trainingActivity),
cbind(testSubjects, testValues, testActivity)
)
View(humanActivity)
# assign column names
colnames(humanActivity) <- c("subject", features[, 2], "activity")
# determine columns of data set to keep based on column name...
columnsToKeep <- grepl("subject|activity|mean|std", colnames(humanActivity))
# ... and keep data in these columns only
humanActivity <- humanActivity[, columnsToKeep]
View(humanActivity)
humanActivity$activity <- factor(humanActivity$activity,
levels = activities[, 1], labels = activities[, 2])
?factor
View(humanActivity)
# get column names
humanActivityCols <- colnames(humanActivity)
# remove special characters
humanActivityCols <- gsub("[\\(\\)-]", "", humanActivityCols)
humanActivityCols <- gsub("^f", "frequencyDomain", humanActivityCols)
humanActivityCols <- gsub("^t", "timeDomain", humanActivityCols)
humanActivityCols <- gsub("Acc", "Accelerometer", humanActivityCols)
humanActivityCols <- gsub("Gyro", "Gyroscope", humanActivityCols)
humanActivityCols <- gsub("Mag", "Magnitude", humanActivityCols)
humanActivityCols <- gsub("Freq", "Frequency", humanActivityCols)
humanActivityCols <- gsub("mean", "Mean", humanActivityCols)
humanActivityCols <- gsub("std", "StandardDeviation", humanActivityCols)
# correct typo
humanActivityCols <- gsub("BodyBody", "Body", humanActivityCols)
# use new labels as column names
colnames(humanActivity) <- humanActivityCols
humanActivityMeans <- humanActivity %>%
group_by(subject, activity) %>%
summarise_each(funs(mean))
write.table(humanActivityMeans, "tidy_data.txt", row.names = FALSE,
quote = FALSE)
setwd("C:/Users/boppa/Desktop/coursera/Data-Science-Hopkins-2020/datasciencecoursera/GettingandCleaningData/getdata_projectfiles_UCI HAR Dataset/UCI HAR Dataset")
